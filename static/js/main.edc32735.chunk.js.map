{"version":3,"sources":["components/Loader/Loader.tsx","api/api.ts","components/Filter/Filter.tsx","components/Card/Card.tsx","components/PokemonsList/PokemonsList.tsx","components/Table/Table.tsx","components/SelectedCard/SelectedCard.tsx","components/Button/Button.tsx","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["Loader","className","API_URL","request","a","url","fetch","response","ok","Error","status","statusText","json","getPokemons","quantity","data","results","Filter","props","pokemons","setSelectedType","selectedType","pokemonTypes","types","forEach","pokemon","typeInstance","push","type","name","Set","getTypes","onChange","event","target","value","defaultValue","classNames","disabled","map","Card","selectPokemon","sprites","onClick","src","front_default","alt","typesInstance","PokemonsList","visibleCount","slice","id","Table","stats","weight","moves","attack","defense","hp","spAttack","spDefense","speed","join","SelectedCard","selectedPokemon","image","Button","text","action","disablingCondition","Layout","useState","setPokemons","loading","setLoading","hasLoadindError","setLoadindError","filteredPokemons","setFilteredPokemons","setVisibleCount","setSelectedPokemon","useEffect","dataArray","i","length","pokemonPromise","then","Promise","all","pokemonsArray","filteredPokemonsArray","filter","find","getPokemonStats","statInstance","stat","base_stat","getPokemonTypes","lastVisible","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc32735.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const API_URL = 'https://pokeapi.co/api/v2/';\n\nconst request = async (url = '') => {\n  const response = await fetch(`${API_URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getPokemons = async (quantity: number) => {\n  const data = await request(`pokemon/?limit=${quantity}`);\n  const response = data.results;\n\n  return response;\n};\n","import React, { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport './Filter.css';\n\ninterface Props {\n  pokemons: Pokemon[];\n  setSelectedType: Dispatch<SetStateAction<string>>;\n  selectedType: string;\n}\n\nexport const Filter: React.FC<Props> = (props) => {\n  const {\n    pokemons,\n    setSelectedType,\n    selectedType,\n  } = props;\n\n  const getTypes = () => {\n    const types: string[] = [];\n\n    pokemons.forEach(pokemon => pokemon.types\n      .forEach(typeInstance => types.push(typeInstance.type.name)));\n\n    return [...new Set(types)];\n  };\n\n  const pokemonTypes = getTypes();\n\n  return (\n    <form className=\"Layout__filter Filter\">\n      <select\n        onChange={(event) => {\n          setSelectedType(event.target.value);\n        }}\n        defaultValue=\"\"\n        className={classNames('Filter__select', {\n          'Filter__select--default': !selectedType,\n        })}\n      >\n        <option\n          value=\"\"\n          disabled\n          className=\"Filter__option--default\"\n        >\n          Choose pokemon type\n        </option>\n        <option\n          value=\"all\"\n          className=\"Filter__option\"\n        >\n          all\n        </option>\n        {pokemonTypes.map(type => (\n          <option\n            key={type}\n            value={type}\n            className=\"Filter__option\"\n          >\n            {type}\n          </option>\n        ))}\n      </select>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Card.css';\n\ninterface Props {\n  pokemon: Pokemon;\n  selectPokemon: (pokemon: Pokemon) => void;\n}\n\nexport const Card: React.FC<Props> = (props) => {\n  const {\n    pokemon,\n    selectPokemon,\n  } = props;\n  const {\n    sprites,\n    name,\n    types,\n  } = pokemon;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => selectPokemon(pokemon)}\n      className=\"Layout__clickable-card\"\n    >\n      <img\n        src={sprites.front_default}\n        alt={name}\n        className=\"Card__image\"\n      />\n      <p className=\"Card__name\">\n        {name}\n      </p>\n      <div className=\"Card__types\">\n        {types.map(typesInstance => (\n          <p\n            className={`Card__type Card__type--${typesInstance.type.name}`}\n            key={typesInstance.type.url}\n          >\n            {typesInstance.type.name}\n          </p>\n        ))}\n      </div>\n    </button>\n  );\n};\n","import React from 'react';\nimport { Card } from '../Card';\nimport './PokemonsList.css';\n\ninterface Props {\n  pokemons: Pokemon[];\n  selectPokemon: (pokemon: Pokemon) => void;\n  visibleCount: number;\n}\n\nexport const PokemonsList: React.FC<Props> = (props) => {\n  const {\n    pokemons,\n    selectPokemon,\n    visibleCount,\n  } = props;\n\n  return (\n    <ul className=\"Layout__list\">\n      {pokemons.slice(0, visibleCount).map(pokemon => (\n        <li\n          key={pokemon.id}\n          className=\"Layout__card Card\"\n        >\n          <Card\n            pokemon={pokemon}\n            selectPokemon={selectPokemon}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './Table.css';\n\ninterface Props {\n  types: string[];\n  stats: Stats;\n  weight: number;\n  moves: number;\n}\n\nexport const Table: React.FC<Props> = (props) => {\n  const {\n    types,\n    stats,\n    weight,\n    moves,\n  } = props;\n  const {\n    attack,\n    defense,\n    hp,\n    spAttack,\n    spDefense,\n    speed,\n  } = stats;\n\n  return (\n    <table className=\"SelectedCard__table Table\">\n      <tbody>\n        <tr>\n          <th className=\"Table__element\">\n            Type\n          </th>\n          <td className=\"Table__element\">\n            {types.join(' ')}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            Attack\n          </th>\n          <td className=\"Table__element\">\n            {attack}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            Defense\n          </th>\n          <td className=\"Table__element\">\n            {defense}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            HP\n          </th>\n          <td className=\"Table__element\">\n            {hp}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            SP Attack\n          </th>\n          <td className=\"Table__element\">\n            {spAttack}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            SP Defense\n          </th>\n          <td className=\"Table__element\">\n            {spDefense}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            Speed\n          </th>\n          <td className=\"Table__element\">\n            {speed}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            Weight\n          </th>\n          <td className=\"Table__element\">\n            {weight}\n          </td>\n        </tr>\n        <tr>\n          <th className=\"Table__element\">\n            Total moves\n          </th>\n          <td className=\"Table__element\">\n            {moves}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Table } from '../Table';\nimport './SelectedCard.css';\n\ninterface Props {\n  selectedPokemon: SelectedPokemon;\n}\n\nexport const SelectedCard: React.FC<Props> = (props) => {\n  const { selectedPokemon } = props;\n  const {\n    image,\n    name,\n    id,\n    types,\n    stats,\n    moves,\n    weight,\n  } = selectedPokemon;\n\n  return (\n    types && stats && (\n      <div className=\"Layout__selected\">\n        <div className=\"SelectedCard Layout__selected-card\">\n          <img\n            src={image}\n            alt={name}\n            className=\"SelectedCard__image\"\n          />\n          <h2 className=\"SelectedCard__name\">\n            {`${name} #${id}`}\n          </h2>\n          <Table\n            types={types}\n            stats={stats}\n            weight={weight}\n            moves={moves}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  className: string;\n  action: () => void;\n  disablingCondition: boolean;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const {\n    text,\n    className,\n    action,\n    disablingCondition,\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      onClick={action}\n      disabled={disablingCondition}\n    >\n      {text}\n    </button>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getPokemons } from '../../api';\nimport { Filter } from '../Filter';\nimport { PokemonsList } from '../PokemonsList';\nimport { SelectedCard } from '../SelectedCard';\nimport { Button } from '../Button';\nimport './Layout.css';\nimport './Error.css';\n\nexport const Layout: React.FC = () => {\n  const pokemonsCount = 84;\n  const initialVisibleCount = 12;\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasLoadindError, setLoadindError] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n  const [filteredPokemons, setFilteredPokemons] = useState<Pokemon[]>([]);\n  const [visibleCount, setVisibleCount] = useState(initialVisibleCount);\n  const [selectedPokemon, setSelectedPokemon] = useState<SelectedPokemon | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const data = await getPokemons(pokemonsCount);\n        const dataArray = [];\n\n        for (let i = 0; i < data.length; i += 1) {\n          const pokemonPromise = fetch(data[i].url)\n            .then(response => response.json());\n\n          dataArray.push(pokemonPromise);\n        }\n\n        const pokemonsArray = await Promise.all(dataArray);\n\n        if (!selectedType) {\n          setFilteredPokemons(pokemonsArray);\n        }\n\n        setPokemons(pokemonsArray);\n      } catch (error) {\n        setLoadindError(true);\n      }\n\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    let filteredPokemonsArray;\n\n    if (selectedType === 'all') {\n      filteredPokemonsArray = pokemons;\n    } else {\n      filteredPokemonsArray = pokemons.filter(pokemon => pokemon.types\n        .find(typeInstance => typeInstance.type.name === selectedType));\n    }\n\n    setFilteredPokemons(filteredPokemonsArray);\n    setVisibleCount(initialVisibleCount);\n  }, [selectedType]);\n\n  const getPokemonStats = (pokemon: Pokemon) => {\n    const stats = {} as Stats;\n\n    pokemon.stats.map((statInstance) => {\n      switch (statInstance.stat.name) {\n        case 'attack':\n          stats.attack = statInstance.base_stat;\n          break;\n        case 'defense':\n          stats.defense = statInstance.base_stat;\n          break;\n        case 'speed':\n          stats.speed = statInstance.base_stat;\n          break;\n        case 'hp':\n          stats.hp = statInstance.base_stat;\n          break;\n        case 'special-defense':\n          stats.spDefense = statInstance.base_stat;\n          break;\n        case 'special-attack':\n          stats.spAttack = statInstance.base_stat;\n          break;\n        default:\n          break;\n      }\n\n      return stats;\n    });\n\n    return stats;\n  };\n\n  const getPokemonTypes = (pokemon: Pokemon) => {\n    const types = pokemon.types\n      .map(typeInstance => (\n        typeInstance.type.name));\n\n    return types;\n  };\n\n  const selectPokemon = (pokemon: Pokemon) => {\n    setSelectedPokemon({\n      id: pokemon.id,\n      name: pokemon.name,\n      image: pokemon.sprites.front_default,\n      types: getPokemonTypes(pokemon),\n      stats: getPokemonStats(pokemon),\n      weight: pokemon.weight,\n      moves: pokemon.moves.length,\n    });\n  };\n\n  const showMore = () => {\n    setVisibleCount(lastVisible => lastVisible + initialVisibleCount);\n  };\n\n  return (\n    <div className=\"Layout\">\n      {hasLoadindError && (\n        <p className=\"Error\">\n          Looks like we have a problem.\n          An error occurred while loading this page.\n        </p>\n      )}\n\n      {loading && (\n        <Loader />\n      )}\n\n      {pokemons.length > 0 && (\n        <>\n          <Filter\n            pokemons={pokemons}\n            selectedType={selectedType}\n            setSelectedType={setSelectedType}\n          />\n          <PokemonsList\n            visibleCount={visibleCount}\n            pokemons={filteredPokemons}\n            selectPokemon={selectPokemon}\n          />\n          <Button\n            text=\"Load more\"\n            className=\"Layout__button\"\n            action={showMore}\n            disablingCondition={filteredPokemons.length <= visibleCount}\n          />\n        </>\n      )}\n\n      {selectedPokemon && (\n        <SelectedCard selectedPokemon={selectedPokemon} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Layout } from './components/Layout/Layout';\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">\n      Pokedex\n    </h1>\n\n    <Layout />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/_normalize.css';\nimport './styles/_reset.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}